# -*- mode: ruby -*-
# vi: set ft=ruby :

PYTHON_VERSION = '3.9.0'
VIM_VERSION = '8.2'


# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  config.vm.box = "bento/ubuntu-20.04"
  config.disksize.size = '30GB'
  # config.vm.box_url = ENV['box_url']

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  config.vm.network "private_network", ip: "FIX ME"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  config.vm.provider "virtualbox" do |vb|
    # Display the VirtualBox GUI when booting the machine
    vb.gui = false
    vb.name = 'py39my8'
 
    # Customize the amount of memory on the VM:
    vb.memory = "2048"

    vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
  end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  config.vm.provision "file", source: "~/.ssh/id_rsa", destination: ".ssh/"
  config.vm.provision "shell", inline: <<-SHELL

    export DEBIAN_FRONTEND=noninteractive
    chmod 0600 ~vagrant/.ssh/*

    curl -sL https://deb.nodesource.com/setup_12.x | bash -
    apt-get install -y nodejs
    npm install -g @vue/cli

    apt-get update

    apt-get -y install mysql-server libmysqlclient-dev

    apt-get -y install build-essential
    apt-get -y install zlib1g-dev libssl-dev libsqlite3-dev libffi-dev libncurses5-dev libbz2-dev
    apt-get -y install sqlite3

    wget "https://www.python.org/ftp/python/#{PYTHON_VERSION}/Python-#{PYTHON_VERSION}.tar.xz"
    tar xvf ./"Python-#{PYTHON_VERSION}.tar.xz"
    cd ./"Python-#{PYTHON_VERSION}"
    ./configure --prefix="/opt/python#{PYTHON_VERSION}" --enable-shared
    make && make install
    ln -s "/opt/python#{PYTHON_VERSION}/bin/pip3" /usr/local/bin/
    ln -s "/opt/python#{PYTHON_VERSION}/bin/python3" /usr/local/bin/
    echo "/opt/python#{PYTHON_VERSION}/lib" >> /etc/ld.so.conf.d/libc.conf
    ldconfig
    pip3 install -U pip
    pip3 install pipenv
    ln -s "/opt/python#{PYTHON_VERSION}/bin/pipenv" /usr/local/bin/

    cd ~vagrant/ 
    git clone https://github.com/vim/vim.git
    cd ./vim/src
    ./configure --prefix="/opt/vim#{VIM_VERSION}/" --enable-python3interp=dynamic
    make && make install
    echo  "export PATH=/opt/vim#{VIM_VERSION}/bin/:$PATH" >> ~vagrant/.profile

    # "It's up to you."
    # curl https://raw.githubusercontent.com/Shougo/dein.vim/master/bin/installer.sh > installer.sh
    # sh ./installer.sh ~/.cache/dein


  SHELL
end
